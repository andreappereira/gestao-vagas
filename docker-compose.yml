version: '3.8'

services:
  gestao_vagas:
    container_name: gestao_vagas
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app
    ports:
      - 8080:8080
      - 5005:5005
    env_file:
      - ./.env
    image: gestao_vagas
    entrypoint: /app/start.dev.server.sh
    depends_on:
      - postgres

  postgres:
    container_name: postgres
    image: postgres
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - 'db_gestao_vagas:/var/lib/postgresql/data'

  prometheus:
    container_name: prometheus
    image: ubuntu/prometheus:2-24.04_stable
    networks:
      - gestao-vagas-network
    ports:
      - 9090:9090
    volumes:
      - './config/prometheus.yml:/etc/prometheus/prometheus.yml'
      - 'prometheus_data:/prometheus'

  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    networks:
      - gestao-vagas-network
    ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana

  # sonarqube:
  #   container_name: gestao_vagas_sonar
  #   image: sonarqube:9.9.0-community
  #   ports:
  #     - 9000:9000

volumes:
  db_gestao_vagas:
  prometheus_data:
  grafana_data:

networks:
  gestao-vagas-network:
    driver: bridge
